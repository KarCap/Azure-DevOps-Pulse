# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
 vmImage: 'windows-latest'

stages:
  - stage: 'Build'
    displayName: "Build stage"
    jobs:
      - job: Build
        displayName: 'Build job'
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
              backendServiceArm: 'Free Trial(4e03ab82-36bb-406b-a279-58ff33884112)'
              backendAzureRmResourceGroupName: 'storagerg'
              backendAzureRmStorageAccountName: 'cosstorage1234567'
              backendAzureRmContainerName: 'tfstatefile'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'custom'
              workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
              customCommand: 'fmt'
              outputTo: 'console'
              environmentServiceNameAzureRM: 'Free Trial(4e03ab82-36bb-406b-a279-58ff33884112)'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/WebApp-ASP.Net core/terraform-manifests'
              environmentServiceNameAzureRM: 'Free Trial(4e03ab82-36bb-406b-a279-58ff33884112)'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: '**'
              TargetFolder: '$(build.artifactstagingdirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'Artifacts-terraform'
              publishLocation: 'Container'
          